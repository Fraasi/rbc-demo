{"version":3,"sources":["Modal/index.js","Calendar/events.js","Calendar/index.js","App.js","serviceWorker.js","index.js"],"names":["ReactModal","modalCustomStyles","content","top","left","right","bottom","marginRight","transform","width","height","overflow","DateInputButton","react_default","a","createElement","type","className","onClick","this","props","value","Component","DatePick","es","Object","assign","customInput","Modal_DateInputButton","required","dateFormat","showTimeSelect","timeCaption","timeFormat","timeIntervals","showMonthDropdown","showWeekNumbers","shouldCloseOnSelect","popperModifiers","offset","enabled","Modal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTitleChange","e","setState","title","target","handleStartDateChange","newStartDate","start","handleEndDateChange","newEndDate","end","handleDescChange","desc","handleDeleteButton","handleEventDelete","closeModal","handleSubmitButton","preventDefault","state","alert","handleEventSave","_this$props$modalEven","modalEvent","_this$props$modalEven2","id","_this$props","modalIsOpen","isNewEvent","_this$state","react_modal_lib","isOpen","style","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","onSubmit","onChange","placeholder","autoFocus","Modal_DatePick","selected","thisMonth","Date","getMonth","Calendar_events","allDay","bgcolor","setHours","moment","locale","navigator","language","week","dow","localizer","BigCalendar","momentLocalizer","formats","timeGutterFormat","agendaTimeFormat","agendaHeaderFormat","_ref","culture","local","concat","format","dayHeaderFormat","DragAndDropCalendar","withDragAndDrop","Calendar","moveEvent","_ref2","event","droppedOnAllDaySlot","isAllDay","events","idx","indexOf","updatedEvent","objectSpread","nextEvents","toConsumableArray","splice","resizeEvent","_ref3","map","existingEvent","selectSlot","slots","length","openModal","selectEvent","now","handleModalEventEdit","key","newValue","newData","newEvent","index","findIndex","newEvents","isSelected","getDay","backgroundColor","Fragment","defaultView","min","toDate","max","step","showMultiDayTimes","onEventDrop","resizable","onEventResize","selectable","onSelectEvent","onSelectSlot","popup","tooltipAccessor","eventPropGetter","getEventStyle","Modal_Modal","App","Calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.618bed8f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport * as ReactModal from 'react-modal'\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport './index.css'\r\n\r\nReactModal.setAppElement('#root')\r\nconst modalCustomStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50vw',\r\n    height: '55vh',\r\n    overflow: 'visible'\r\n  }\r\n}\r\n\r\nclass DateInputButton extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"date-input-button\"\r\n        onClick={this.props.onClick}>\r\n        {this.props.value}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nclass DatePick extends Component {\r\n  render() {\r\n    return (\r\n      <DatePicker\r\n      {...this.props}\r\n      customInput={<DateInputButton />}\r\n      required={true}\r\n      dateFormat=\"dd/MM/yyyy HH:mm\"\r\n      showTimeSelect={true}\r\n      timeCaption=\"Time\"\r\n      timeFormat=\"HH:mm\"\r\n      timeIntervals={30}\r\n      showMonthDropdown={true}\r\n      showWeekNumbers={true}\r\n      shouldCloseOnSelect={true}\r\n      popperModifiers={{\r\n        offset: {\r\n          enabled: true,\r\n          offset: '-40px, 0px'\r\n        }\r\n      }}\r\n    />\r\n    )\r\n  }\r\n}\r\n\r\nexport default class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { title = '', start, end, desc, id } = this.props.modalEvent\r\n    this.state = {\r\n      title,\r\n      start,\r\n      end,\r\n      desc,\r\n      id,\r\n    }\r\n  }\r\n\r\n  handleTitleChange = (e) => {\r\n    this.setState({ title: e.target.value })\r\n  }\r\n\r\n  handleStartDateChange = (newStartDate) => {\r\n    this.setState({ start: newStartDate })\r\n  }\r\n\r\n  handleEndDateChange = (newEndDate) => {\r\n    this.setState({ end: newEndDate })\r\n  }\r\n\r\n  handleDescChange = (e) => {\r\n    this.setState({ desc: e.target.value })\r\n  }\r\n\r\n  handleDeleteButton = () => {\r\n    this.props.handleEventDelete()\r\n    this.props.closeModal()\r\n  }\r\n\r\n  handleSubmitButton = (e) => {\r\n    e.preventDefault()\r\n    if (this.state.start > this.state.end) {\r\n      alert(`Error, time paradox!!!\\nEvent end date can not be earlier than event start date!`)\r\n      return\r\n    }\r\n    this.props.handleEventSave(this.state)\r\n    this.props.closeModal()\r\n  }\r\n\r\n  render() {\r\n    const { modalIsOpen, closeModal, isNewEvent } = this.props\r\n    const { title, start, end, desc } = this.state\r\n    return (\r\n      <ReactModal\r\n        isOpen={modalIsOpen}\r\n        style={modalCustomStyles}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={closeModal}\r\n        closeTimeoutMS={150}\r\n      >\r\n        <form onSubmit={this.handleSubmitButton} className=\"form-wrapper\">\r\n          <div>\r\n            <label>\r\n              Event title\r\n              <input type=\"text\" value={title} onChange={this.handleTitleChange} placeholder=\"No title\" required autoFocus />\r\n            </label>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <label>\r\n              Event start\r\n              <DatePick\r\n                selected={start}\r\n                onChange={this.handleStartDateChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <label>\r\n              Event end\r\n              <DatePick\r\n                selected={end}\r\n                onChange={this.handleEndDateChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <textarea onChange={this.handleDescChange} value={desc} placeholder=\"Event description\" />\r\n          </div>\r\n          <div className=\"modal-buttons\">\r\n            {!isNewEvent && <button type=\"button\" onClick={this.handleDeleteButton}>Delete event</button>}\r\n            <button type=\"button\" onClick={closeModal}>Cancel</button>\r\n            <button type=\"submit\">Save</button>\r\n          </div>\r\n        </form>\r\n      </ReactModal>\r\n    )\r\n  }\r\n}\r\n","const thisMonth = new Date().getMonth()\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    title: 'All Day Event very long title',\r\n    allDay: true,\r\n    start: new Date(2019, thisMonth, 1, 0),\r\n    end: new Date(2019, thisMonth, 1, 24),\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Some Event',\r\n    start: new Date(2019, thisMonth, 9, 0, 0, 0),\r\n    end: new Date(2019, thisMonth, 10, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Conference',\r\n    start: new Date(2019, thisMonth, 11),\r\n    end: new Date(2019, thisMonth, 13),\r\n    desc: 'Big conference for important people',\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Meeting',\r\n    start: new Date(2019, thisMonth, 12, 10, 30, 0, 0),\r\n    end: new Date(2019, thisMonth, 12, 12, 30, 0, 0),\r\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Lunch',\r\n    start: new Date(2019, thisMonth, 12, 12, 0, 0, 0),\r\n    end: new Date(2019, thisMonth, 12, 13, 0, 0, 0),\r\n    desc: 'Power lunch',\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Meeting',\r\n    start: new Date(2019, thisMonth, 12, 14, 0, 0, 0),\r\n    end: new Date(2019, thisMonth, 12, 15, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 9,\r\n    title: 'Happy Hour',\r\n    start: new Date(2019, thisMonth, 12, 17, 0, 0, 0),\r\n    end: new Date(2019, thisMonth, 12, 17, 30, 0, 0),\r\n    desc: 'Most important meal of the day',\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Dinner',\r\n    start: new Date(2019, thisMonth, 12, 20, 0, 0, 0),\r\n    end: new Date(2019, thisMonth, 12, 21, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 11,\r\n    title: 'Birthday Party',\r\n    start: new Date(2019, thisMonth, 13, 7, 0, 0),\r\n    end: new Date(2019, thisMonth, 13, 10, 30, 0),\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Late Night Event',\r\n    start: new Date(2019, thisMonth, 17, 19, 30, 0),\r\n    end: new Date(2019, thisMonth, 18, 2, 0, 0),\r\n  },\r\n  {\r\n    id: 12.5,\r\n    title: 'Late Same Night Event',\r\n    start: new Date(2019, thisMonth, 17, 19, 30, 0),\r\n    end: new Date(2019, thisMonth, 17, 23, 30, 0),\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Multi-day Event',\r\n    start: new Date(2019, thisMonth, 20, 19, 30, 0),\r\n    end: new Date(2019, thisMonth, 22, 2, 0, 0),\r\n    bgcolor: 'purple',    \r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Today',\r\n    start: new Date(new Date().setHours(16)),\r\n    end: new Date(new Date().setHours(18)),\r\n  },\r\n]\r\n","import React, { Component } from 'react'\r\nimport BigCalendar from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\"\r\nimport moment from 'moment'\r\nimport Modal from '../Modal'\r\nimport events from './events'\r\nimport './index.css'\r\n\r\nmoment.locale(navigator.language, {\r\n  week: {\r\n    dow: 1\r\n  },\r\n});\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\nconst formats = {\r\n  timeGutterFormat: 'H:mm',\r\n  agendaTimeFormat: 'H:mm',\r\n  agendaHeaderFormat: ({ start, end }, culture, local) => (\r\n    `${local.format(start, \"MMMM D\")} — ${local.format(end, \"MMMM D\")}`),\r\n  dayHeaderFormat: 'dddd MMMM Do',\r\n}\r\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar)\r\n\r\nexport default class Calendar extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      events: events,\r\n      modalIsOpen: false,\r\n      isNewEvent: false,\r\n      modalEvent: {\r\n        title: '',\r\n        start: null,\r\n        end: null,\r\n        desc: '',\r\n        id: null\r\n      },\r\n    }\r\n  }\r\n\r\n  moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\r\n    const { events } = this.state\r\n    const idx = events.indexOf(event)\r\n    let allDay = event.allDay\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false\r\n    }\r\n\r\n    const updatedEvent = { ...event, start, end, allDay }\r\n    const nextEvents = [...events]\r\n    nextEvents.splice(idx, 1, updatedEvent)\r\n\r\n    this.setState({\r\n      events: nextEvents,\r\n    })\r\n  }\r\n\r\n  resizeEvent = ({ event, start, end }) => {\r\n    const { events } = this.state\r\n\r\n    const nextEvents = events.map(existingEvent => {\r\n      return existingEvent.id === event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent\r\n    })\r\n\r\n    this.setState({\r\n      events: nextEvents,\r\n    })\r\n  }\r\n\r\n  selectSlot = (event) => {\r\n    this.setState({ isNewEvent: true })\r\n    event.start = event.slots[0]\r\n    event.end = event.slots[event.slots.length - 1]\r\n    this.openModal(event)\r\n  }\r\n\r\n  selectEvent = (event) => {\r\n    this.setState({ isNewEvent: false })\r\n    this.openModal(event)\r\n  }\r\n\r\n  openModal = (event) => {\r\n    const id = event.id ? event.id : Date.now()\r\n    this.setState({\r\n      modalIsOpen: true,\r\n      modalEvent: {\r\n        ...event,\r\n        id\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventStyle(event, start, end, isSelected) {\r\n    const style = {}\r\n    if (start.getDay() === new Date().getDay()) {\r\n      style.backgroundColor = 'green'\r\n    }\r\n    if (event.bgcolor) {\r\n      style.backgroundColor = event.bgcolor\r\n    }\r\n    return { style }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  }\r\n\r\n  handleModalEventEdit = (key, newValue) => {\r\n    const newData = { ...this.state.modalEvent }\r\n    newData[key] = newValue\r\n    this.setState({\r\n      modalEvent: newData\r\n    })\r\n  }\r\n\r\n  handleEventSave = (newEvent) => {\r\n    const index = this.state.events.findIndex( event => event.id === newEvent.id )\r\n    if (index > -1) {\r\n      const newEvents = this.state.events\r\n      newEvents[index] = { ...newEvent }\r\n      this.setState({\r\n        events: newEvents\r\n      })\r\n    } else {\r\n      this.setState({\r\n        events: [\r\n          ...this.state.events,\r\n          { ...newEvent },\r\n        ],\r\n      })\r\n    }\r\n  }\r\n\r\n  handleEventDelete = () => {\r\n    const index = this.state.events.findIndex(event => {\r\n      return event.id === this.state.modalEvent.id\r\n    })\r\n    if (index > -1) {\r\n      const newEvents = this.state.events\r\n      newEvents.splice(index, 1)\r\n      this.setState({\r\n        events: newEvents\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <DragAndDropCalendar style={{ height: '100vh' }}\r\n          localizer={localizer}\r\n          formats={formats}\r\n          events={this.state.events}\r\n          defaultView={'month'}\r\n          min={moment('10:00am', 'H:mma').toDate()}\r\n          max={moment('09:59pm', 'H:mma').toDate()}\r\n          step={60}\r\n          showMultiDayTimes={true}\r\n          onEventDrop={this.moveEvent}\r\n          resizable={true}\r\n          onEventResize={this.resizeEvent}\r\n          selectable={true}\r\n          onSelectEvent={this.selectEvent}\r\n          onSelectSlot={this.selectSlot}\r\n          popup={true}\r\n          tooltipAccessor={(e) => e.title}\r\n          eventPropGetter={this.getEventStyle}\r\n        />\r\n        <Modal \r\n          modalIsOpen={this.state.modalIsOpen}\r\n          closeModal={this.closeModal}\r\n          handleModalEventEdit={this.handleModalEventEdit}\r\n          modalEvent={this.state.modalEvent}\r\n          handleEventSave={this.handleEventSave}\r\n          handleEventDelete={this.handleEventDelete}\r\n          isNewEvent={this.state.isNewEvent}\r\n          key={this.state.modalEvent.id}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Calendar from './Calendar';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar openModal={this.openModal}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}